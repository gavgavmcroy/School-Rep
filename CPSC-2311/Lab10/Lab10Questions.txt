CPSC 2310 Spring 2021
Lab 10 Questions

1. As discussed in the lab writeup, the locations for min and max are 
	-8(%rbq) and -4(%rbq), which are 4 apart. How far apart would these
	addresses be if min and max were chars instead of ints? Why?
	What if they were doubles? 
	(You can test this)


2. Alter the values assigned to min and max in the driver.s file
	| min | max | result
	=======================
	| 0   | 10  | 
	| 5   | 10  |
	| 10  | 0   |
	| -5  | 1   |

3. What are these lines doing in driver.s?

	movl  -8(%rbp), %eax # min, tmp89
   	movl  %eax, -12(%rbp)   # tmp89, i


4. What happens when you change the jump conditional to jl instead of jle?
	What if you change it to jg? Why?



5. The last line in .L3 handles the for loop change (i++)
   The third line in .L2  handles the for loop conditional (i < max)
(The first two lines in .L2 handle the initialization, but we won't alter that)
	
Fill in the resulting loop and print out when we change the x86 commands 
(*some of these create infinite loops so testing directly may take awhile, 
try to logic through it first. If there is an infinite loop, write "infinite
loop" as the printout)

	.L3         | .L2  |        for loop             |    printout
===========================================================================
addl  $1, -12(%rbp) | jle  | for(i = min; i <= max; i++) | 0 1 3 4....10
subl  $1, -12(%rbp) | jle  | for(i = min;         ;    ) |
addl  $2, -12(%rbp) | jl   | for(i = min;         ;    ) |
mull  $2, -12(%rbp) | jge  | for(i = min;         ;    ) |
addl  $1, -8(%rbp)  | jle  | for(i = min;         ;    ) |


6. lsl r4, r3, #2 is the same as r4 = 4 * r3. Explain


   ldr r5, [r0, r4] is the same as r5 = arr[i] in this case. How does this work



7. In the beginning of a function in ARM, we push lr onto the stack. At the
   end, we pop that value into pc. Why is this important? What does it 
   accomplish?	
